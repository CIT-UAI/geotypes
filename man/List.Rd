% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_types.R
\name{List}
\alias{List}
\title{List type}
\usage{
List(
  types = list(),
  default_type = typed::Any(),
  select = "any_of",
  only_vals = FALSE,
  empty_ok = FALSE,
  null_ok = FALSE,
  anyNA = FALSE,
  ...
)
}
\arguments{
\item{types}{List where each element must have a declared type, ex list(a = typed::Double())}

\item{default_type}{On elements not declared on types, this will be the default one}

\item{select}{if "all_of" all the elements declared on types must exists}

\item{only_vals}{If must exists all and only the values declared on types}

\item{empty_ok}{If is acceptable to be empty}

\item{null_ok}{Parsed to typed::List}

\item{anyNA}{Parsed to typed::List}

\item{...}{Parsed to typed assertion factory}
}
\value{
Assertion for List
}
\description{
typed List with custom types
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_types.R
\name{List}
\alias{List}
\title{List type}
\usage{
List(
  types = list(),
  default_type = typed::Any(),
  select = "any_of",
  empty_ok = FALSE,
  null_ok = FALSE,
  anyNA = FALSE,
  ...
)
}
\arguments{
\item{types}{List where each element must have a
declared type, ex list(a = typed::Double())}

\item{default_type}{On elements not declared on types,
this will be the default one}

\item{select}{Set the relation between the declared
elements on types and the existing ones
"any_of": Can exist any element
"only_from": Only can exists declared elements,
empty list is valid
"all_of": Must exist all the declared elements
"exclusively": Must exist all and only the declared elements}

\item{empty_ok}{If is acceptable to be empty}

\item{null_ok}{Parsed to typed::List}

\item{anyNA}{Parsed to typed::List}

\item{...}{Parsed to typed assertion factory}
}
\value{
Assertion for List
}
\description{
typed List with custom types
}
